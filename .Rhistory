"method" = "MT",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
GibbsRFLSMXUpdatecpp(Y, pars,bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "MT",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
GibbsRFLSMXUpdatecpp(Y, pars,bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars,bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
bset <- list(
"method" = "MT",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
bset
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
GibbsRFLSMXUpdatecpp
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
out <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
out <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out
out$Tau == 1
which(out$Tau == 1)
out$Beta
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2
?arima
?arima
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
dim(X)
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X,
pars$lambda2)
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X,
as.matrix(pars$lambda2))
X
Y
bset
pars$lambda2
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
arima(Y, order = c(3, 0, 0), xreg = X)
aaa <- arima(Y, order = c(3, 0, 0), xreg = X)
aaa$coef
aaa
aaa$sigma2
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
init
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
init
pars$Tau
init$Tau
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, pars$lambda2)
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
H
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
init
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
tol = 1e-6,
X = X, H = H)
out2
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
tol = 1e-6,
X = X, H = H)
out2
out1
out2
init
out2
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-xx")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
