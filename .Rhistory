Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
#debug(BayesianLASSOMonitoring::adjalpha.ph2)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
chart1
chart1$Y.hat
chart1$Y.hat
plot(chart1$model$Y.tr)
points(chart1$Y.hat, col = 'red')
points(6:183, chart1$Y.hat, col = 'red')
plot(chart1$model$Y.tr)
points(6:183, chart1$Y.hat, col = 'red')
?dnorm
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
cs
plot(cs)
cs
plot(cs)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
Q
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
cs
cs
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
lim.ph1(Y.hat, Y1.hat, sigma2hat, Y.tr.sim, FAP0 = FAP0,
side = side)
debug(lim.ph1)
lim.ph1 <- function(Y.hat, Y1.hat, sigma2.hat, Y.sim, FAP0 = 0.3, side = "two-sided") {
nsim <- dim(Y.sim)[2]
TT <- dim(Y.sim)[1]
llr <- matrix(NA, nrow = TT, ncol = nsim)
llr.max <- rep(NA, nsim)
for (i in 1:nsim) {
llr[, i] <- 2 * (dnorm(Y.sim[, i], Y1.hat, sqrt(sigma2.hat), log = TRUE) -
dnorm(Y[-c(1:q)], Y.hat, sqrt(sigma2.hat), log = TRUE))
if (side == "right-sided") {
llr[, i] <- llr[, i] * (Y1.hat > Y.hat)
} else if (side == "left-sided") {
llr[, i] <- llr[, i] * (Y1.hat < Y.hat)
}
llr.max[i] <- max(llr[, i])
}
lim <- quantile(llr.max, 1 - FAP0)
lim
}
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
debug(lim.ph1)
lim.ph1(Y.hat, Y1.hat, sigma2hat, Y.tr.sim, FAP0 = FAP0,
side = side)
Y.hat
Y1.hat
Y.hat
debug(lim.ph1)
lim.ph1(Y.hat, Y1.hat, sigma2hat, Y.tr.sim, FAP0 = FAP0,
side = side)
2 * (dnorm(Y.sim[, i], Y1.hat, sqrt(sigma2.hat),
log = TRUE) - dnorm(Y[-c(1:q)], Y.hat, sqrt(sigma2.hat),
log = TRUE))
dnorm(Y.sim[, i], Y1.hat, sqrt(sigma2.hat),
log = TRUE)
dnorm(Y[-c(1:q)], Y.hat, sqrt(sigma2.hat),
log = TRUE)
dnorm(Y.sim[, i], Y.hat, sqrt(sigma2.hat),
log = TRUE)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
lim
sig.tr
plot(llr)
plot(cs)
lim.tr
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
plot(Y.hat)
points(Y1.hat, col = 'red')
lim
sig.tr
Y.hat
Y.hat.sim
dim(Y.hat.sim)
dim(Y1.hat.sim)
Y.hat.sim[, 1]
Y1.hat.sim[, 1]
lim.ph1 <- function(Y.sim, Y.hat.sim, Y1.hat.sim, sigma2.sim, FAP0 = 0.3, side = "two-sided") {
nsim <- dim(Y.sim)[2]
TT <- dim(Y.sim)[1]
llr.H1 <- matrix(NA, nrow = TT, ncol = nsim)
llr.H0 <- matrix(NA, nrow = TT, ncol = nsim)
bf <- matrix(NA, nrow = TT, ncol = nsim)
bf.max <- rep(NA, nsim)
for (i in 1:nsim) {
tmp1 <- rep(0, TT)
tmp0 <- rep(0, TT)
for (j in 1:nsim) {
tmp1 <- tmp1 + dnorm(Y.sim[, i], Y1.hat.sim[, j], sqrt(sigma2.sim[j]))
tmp0 <- tmp0 + dnorm(Y.sim[, i], Y.hat.sim[, j], sqrt(sigma2.sim[j]))
}
llr.H1[, i] <- tmp1 / nsim
llr.H0[, i] <- tmp0 / nsim
bf[, i] <- tmp1 / tmp0
bf.max[i] <- max(bf[, i])
}
lim <- quantile(bf.max, 1 - FAP0)
lim
}
Y.sim
Y.tr.sim
Y.hat.sim
Y1.hat.sim
debug(lim.ph1)
lim.ph1(Y.tr.sim, Y.hat.sim, Y1.hat.sim, model$sigma2, FAP0 = 0.3, side = "two-sided") {
debug(lim.ph1)
lim.ph1(Y.tr.sim, Y.hat.sim, Y1.hat.sim, model$sigma2, FAP0 = 0.3, side = "two-sided")
TT
tmp1
tmp0
llr.H1
llr.H1[, 1]
i
tmp1
tmp1 <- tmp1 + dnorm(Y.sim[, i], Y1.hat.sim[, j], sqrt(sigma2.sim[j]))
tmp1
tmp1 <- rep(0, TT)
tmp0 <- rep(0, TT)
for (j in 1:nsim) {
tmp1 <- tmp1 + dnorm(Y.sim[, i], Y1.hat.sim[, j], sqrt(sigma2.sim[j]))
tmp0 <- tmp0 + dnorm(Y.sim[, i], Y.hat.sim[, j], sqrt(sigma2.sim[j]))
}
tmp1
tmp1
tmp1
tmp1
tmp1
tmp1
tmp1
tmp1
tmp1
nsim
i
j
tmp1
j
tmp1
tmp1
j
tmp1
dnorm(Y.sim[, i], Y1.hat.sim[, j], sqrt(sigma2.sim[j]))
Y1.hat.sim[, j]
sigma2.sim[j]
fit
fit.GibbsRFLM <- function(Y, Phi, muq, sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = NULL, Gamma = NULL, Tau = NULL) {
TT <- length(Y)
q <- length(Phi)
muX <- rep(0, TT)
if (!is.null(X)) {
muX <- X %*% (Beta * Kappa)
}
muH <- rep(0, TT)
if (!is.null(H)) {
muH <- H %*% (Gamma * Tau)
}
mu <- muq + muX + muH
fit <- rep(NA, TT)
for (i in (q + 1):TT) {
fit[i] <- mu[i] + (Y[(i - 1):(i - q)] - mu[(i - 1):(i - q)]) %*% Phi
}
fit
}
fit.GibbsRFLSM <- function(Y, Phi, muq, sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = NULL, Gamma = NULL, Tau = NULL) {
TT <- length(Y)
q <- length(Phi)
muX <- rep(0, TT)
if (!is.null(X)) {
muX <- X %*% (Beta * Kappa)
}
muH <- rep(0, TT)
if (!is.null(H)) {
muH <- H %*% (Gamma * Tau)
}
mu <- muq + muX + muH
fit <- rep(NA, TT)
for (i in (q + 1):TT) {
fit[i] <- mu[i] + (Y[(i - 1):(i - q)] - mu[(i - 1):(i - q)]) %*% Phi
}
fit
}
chart1
Y1
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
devtools::install_github("bolus123/BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
debug(BayesianLASSOMonitoring::Ph1BayesianLASSO)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
debug(lim.ph1)
fit0
debug(fit.GibbsRFLSM)
TT
q
q
muX
muX
length(muX)
length(muH)
length(TT)
dim
length(Y)
Y
length(Y)
remove.packages("BayesianLASSOMonitoring")
