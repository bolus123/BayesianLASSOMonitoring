log = log, sta = sta)
Y2.tr0
Y2.tr
q
Y2.tr
Y2.tr0
Y2
Y2.ma
w
length(Y2.tr)
length(Y)
w
Y2.ma
w
length(Y1)
debug(Ph2BayesianLASSO.EWMA)
chart2 <- Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
Y2.ma
Y1
Y
movaver(Y2, 14)
fit.sim[, 1]
Y2.hat.sim[, 1]
Y2.tr.sim[, 1]
ewma
ewma
ewma
plot(ewma)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
#debug(Ph2BayesianLASSO.EWMA)
chart2 <- Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
debug(Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
debug(Ph2BayesianLASSO.EWMA)
debug(BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
debug(BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
Y2.tr
Y2.ma
Y2.tr
Ph2BayesianLASSO.EWMA <- function(Y, Ph1BayesianLASSO.chart, lambda = 0.05, H = NULL, X = NULL,
Y1 = rep(0, dim(Ph1BayesianLASSO.model$Phi)[1] + w), X1 = NULL, H1 = NULL,
log = TRUE, const = 1, sta = TRUE, meanY = 0, sdY = 1,
Y.hat.method = "median",
cc.method = "adjusted alpha",
ARL0 = 360, side = "two-sided", max.length = 5000,
nsim.chart = 10000, tol.chart = 1e-6,
plot = TRUE) {
Ph1BayesianLASSO.model <- Ph1BayesianLASSO.chart$model
w <- Ph1BayesianLASSO.model$w
TT2 <- length(Y)
q <- dim(Ph1BayesianLASSO.model$Phi)[1]
Y2 <- c(Y1, Y)
TT <- length(Y2)
Y2.ma <- movaver(Y2, w)[(TT - TT2 - q + 1):TT]
Y2.tr <- Y2.ma
if (log == TRUE) {
Y2.tr <- log(Y2.tr + const)
}
if (sta == TRUE) {
Y2.tr <- (Y2.tr - meanY) / sdY
}
Y2.tr0 <- Y2.tr[1:q]
Y2.tr1 <- Y2.tr[-c(1:q)]
Y2.tr.sim <- GibbsRFLSM.sim.ph2(max.length, nsim.chart,
Ph1BayesianLASSO.model$Phi, Ph1BayesianLASSO.model$muq, Ph1BayesianLASSO.model$sigma2,
X, Ph1BayesianLASSO.model$Beta, Ph1BayesianLASSO.model$Kappa,
H, Ph1BayesianLASSO.model$Gamma, Ph1BayesianLASSO.model$Tau,
Y2.tr0, X1, H1)
Y2.hat.sim <- Y2.tr.sim$fit
Y2.tr.sim <- Y2.tr.sim$Y.tr
Y.hat <- rep(NA, TT2)
if (Y.hat.method == "median") {
for (i in 1:TT2) {
Y.hat[i] <- median(Y2.hat.sim[i, ])
}
sigma2hat <- median(Ph1BayesianLASSO.model$sigma2)
} else if (Y.hat.method == "mean") {
Y.hat <- rowMeans(Y2.hat.sim)
sigma2hat <- mean(Ph1BayesianLASSO.model$sigma2)
}
sigmahat <- sqrt(sigma2hat)
lim.tr <- matrix(NA, nrow = TT2, ncol = 2)
sig.tr <- lim.tr[, 1]
ewma <- (Y - Y.hat[1:TT2]) / sigmahat
ewma <- (ewma - Ph1BayesianLASSO.chart$cs.mean) / Ph1BayesianLASSO.chart$cs.sd
for (i in 2:TT2) {
ewma[i] <- lambda * ewma[i] + (1 - lambda) * ewma[i - 1]
}
if (plot == TRUE) {
if (cc.method == "adjusted alpha") {
adjalpha <- adjalpha.ph2(Y.hat, sigma2hat, Y2.tr.sim,
Ph1BayesianLASSO.chart$cs.mean, Ph1BayesianLASSO.chart$cs.sd,
ARL0, side, tol.chart)
for (i in 1:TT2) {
if (side == "two-sided") {
lim.tr[i, ] <- quantile(adjalpha$ewma[i, ], c(adjalpha$adjalpha / 2, 1 - adjalpha$adjalpha / 2))
} else if (side == "right-sided") {
lim.tr[i, 1] <- -Inf
lim.tr[i, 2] <- quantile(adjalpha$ewma[i, ], c(1 - adjalpha$adjalpha))
} else if (side == "left-sided") {
lim.tr[i, 1] <- quantile(adjalpha$ewma[i, ], c(adjalpha$adjalpha))
lim.tr[i, 2] <- Inf
}
}
} else if (cc.method == "classic") {
cc <- cc.ph2(Y.hat, sigma2hat, Y2.tr.sim,
Ph1BayesianLASSO.chart$cs.mean, Ph1BayesianLASSO.chart$cs.sd,
ARL0, side, tol.chart)
for (i in 1:TT2) {
if (side == "two-sided") {
lim.tr[i, 1] <- - cc$cc
lim.tr[i, 2] <- cc$cc
} else if (side == "right-sided") {
lim.tr[i, 1] <- -Inf
lim.tr[i, 2] <- cc$cc
} else if (side == "left-sided") {
lim.tr[i, 1] <- - cc$cc
lim.tr[i, 2] <- Inf
}
}
}
sig.tr <- (lim.tr[, 1] <= ewma) & (ewma <= lim.tr[, 2])
if (side == "two-sided") {
Ylim <- c(min(lim.tr, ewma, na.rm = TRUE), max(lim.tr, ewma, na.rm = TRUE))
} else if (side == "right-sided") {
Ylim <- c(min(ewma, na.rm = TRUE), max(lim.tr, ewma, na.rm = TRUE))
} else if (side == "left-sided") {
Ylim <- c(min(lim.tr, ewma, na.rm = TRUE), max(ewma, na.rm = TRUE))
}
plot(c(1, TT2), Ylim, type = 'n',
main = "Phase II Chart for Transformed Moving Averages",
ylab = "EWMA",
xlab = "")
points(ewma, type = 'o')
points((1:TT2)[which(sig.tr == FALSE)], ewma[which(sig.tr == FALSE)], col = 'red', pch = 16)
points(lim.tr[, 1], type = 'l', lty = 2, col = 'red')
points(lim.tr[, 2], type = 'l', lty = 2, col = 'red')
}
out <- list("EWMA" = ewma, "lim.tr" = lim.tr,
"sig.tr" = sig.tr, "Y.hat" = Y.hat)
out
}
chart2 <- Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
library(BayesianLASSOMonitoring)
chart2 <- Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
#debug(BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
warnings()
debug(BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
dim(Y2.hat.sim)
Y2.tr.sim
dim(Y2.tr.sim)
Y.hat
warnings()
dim(v)
dim(Y2.tr.sim)
length(Y.hat)
350
350
5000 - 350
GibbsRFLSM.sim.ph1
BayesianLASSOMonitoring::GibbsRFLSM.sim.ph1
BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
X
chart1$model$Y.tr[1:5]
chart1$lim.tr
chart1$sig.tr
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = rep(0, dim(Phi)[1]), X1 = NULL, H1 = NULL)
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = rep(0, dim(Phi)[1]), X1 = NULL, H1 = NULL)
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = rep(0, dim(Phi)[1]), X1 = NULL, H1 = NULL)
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = rep(0, dim(Phi)[1]), X1 = NULL, H1 = NULL)
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau)
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1], H1 = chart1$model$H[(TT1 - q + 1):TT1])
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1], H1 = chart1$model$H[(TT1 - q + 1):TT1])
H1
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1], H1 = chart1$model$H[(TT1 - q + 1):TT1])
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1, ], H1 = chart1$model$H[(TT1 - q + 1):TT1, ])
aa
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y.tr[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1, ], H1 = chart1$model$H[(TT1 - q + 1):TT1, ])
aa
aa[1, ]
aa$Y.tr[1, ]
aa$Y.tr[, 1]
debug(BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2)
aa <- BayesianLASSOMonitoring::GibbsRFLSM.sim.ph2(h = 5000, nsim = 100, chart1$model$Phi, chart1$model$muq, chart1$model$sigma2,
X = NULL, Beta = NULL, Kappa = NULL,
H = H2sim, Gamma = chart1$model$Gamma, Tau = chart1$model$Tau,
Y1 = chart1$model$Y.tr[(TT1 - q + 1):TT1],
X1 = chart1$model$X[(TT1 - q + 1):TT1, ], H1 = chart1$model$H[(TT1 - q + 1):TT1, ])
Y1
Y1.sim
aa
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
#debug(BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
warnings()
debug(BayesianLASSOMonitoring::adjalpha.ph2)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
dim(Y.sim)
length(Y.hat)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1
TT1 <- c(183)
TT2 <- 365
w <- c(14)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 1
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
chart1 <- try(BayesianLASSOMonitoring::Ph1BayesianLASSO(Y1, w, H1, NULL, Y0 = Y0, method = "MonoALASSO",
const = 1, nsim.chart = 100000,
Y.hat.method = Y.hat.method, side = side, FAP0 = FAP0,
log = log, sta = sta, plot = TRUE), silent = TRUE)
#debug(BayesianLASSOMonitoring::adjalpha.ph2)
chart2 <- BayesianLASSOMonitoring::Ph2BayesianLASSO.EWMA(Y2, chart1, H = H2sim,
Y1 = Y1[(length(Y1) - w - q + 2):length(Y1)],
H1 = H1[(length(Y1) - q + 1):length(Y1), ],
log = log, sta = sta)
chart1
chart1$Y.hat
chart1$Y.hat
plot(chart1$model$Y.tr)
points(chart1$Y.hat, col = 'red')
points(6:183, chart1$Y.hat, col = 'red')
plot(chart1$model$Y.tr)
points(6:183, chart1$Y.hat, col = 'red')
?dnorm
remove.packages("BayesianLASSOMonitoring")
