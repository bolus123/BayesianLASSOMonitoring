YSim[j, i] <- m0$Mu[j, tmpsel] +
(YSim[(j-1):(j - 3), i] - m0$Mu[(j-1):(j - 3), tmpsel]) %*% m0$Phi[, tmpsel] +
rnorm(1, sd = sqrt(m0$sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(Phi, ncol = 1),
matrix(muq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(Phi, ncol = 1),
matrix(Mu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / sigma2) >
((RSS0 - RSS1) / sigma2)
}
result0
mean(result0)
RSS0
RSS1
((RSS0 - RSS1) / sigma2)
Mu <- muq + H %*% Gamma
RSS0 <- RSS(Y0, matrix(Phi, ncol = 1),
matrix(muq, ncol = 1))
RSS1 <- RSS(Y0, matrix(Phi, ncol = 1),
matrix(Mu, ncol = 1))
for (i in 1:3000) {
tmpsel <- sample(1:1000, 1)
YSim[1:3, i] <- Y0[1:3]
for (j in 4:183) {
YSim[j, i] <- m0$Mu[j, tmpsel] +
(YSim[(j-1):(j - 3), i] - m0$Mu[(j-1):(j - 3), tmpsel]) %*% m0$Phi[, tmpsel] +
rnorm(1, sd = sqrt(m0$sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(Phi, ncol = 1),
matrix(muq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(Phi, ncol = 1),
matrix(Mu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / sigma2) >=
((RSS0 - RSS1) / sigma2)
}
result0
mean(result0)
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- dim(Y)[1]
m <- T - q
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(Tau[i, ] * Gamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
}
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- dim(Y)[1]
m <- T - q
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(Tau[i, ] * Gamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
}
debug(PPP)
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
nnsim
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
m
T - q
T
dim(Phi)[1]
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(Tau[i, ] * Gamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
}
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
debug(aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq))
debug(aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq))
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
}
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
debug(PPP)
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
m
RSS0
RSS1
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
Y[1:q]
YSim[1:q, i]
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
result0[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
}
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
aa
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
out[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
out
}
aa
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
aa
mean(aa)
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
out[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
mean(aa)
}
mean(aa)
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
aa
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
bb
debug(bb)
debug(PPP)
bb
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
RSS0
RSS1
tmpMu
bb
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
out[i] <- ((RSS0Sim[i] - RSS1Sim[i]) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
}
mean(out)
}
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
bb
debug(PPP)
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
out
RSS0Sim
RSS1Sim
RSS0Sim - RSS1Sim
(RSS0 - RSS1) / tmpsigma2
PPP <- function(Y, Phi, Mu, H, TauGamma, sigma2, muq, method = "median", nsim = 3000) {
nnsim <- dim(Phi)[2]
q <- dim(Phi)[1]
T <- length(Y)
m <- T - q
YSim <- matrix(NA, nrow = T, ncol = nsim)
RSS0 <- rep(NA, nsim)
RSS1 <- rep(NA, nsim)
RSS0Sim <- rep(NA, nsim)
RSS1Sim <- rep(NA, nsim)
out <- rep(NA, nsim)
tmpPhi <- matrix(NA, nrow = q)
tmpGamma <- matrix(NA, nrow = m)
tmpMu <- matrix(NA, nrow = T)
if (method == "median") {
tmpmuq <- median(muq)
tmpsigma2 <- median(sigma2)
for (i in 1:q) {
tmpPhi[i, 1] <- median(Phi[i, ])
}
for (i in 1:m) {
tmpGamma[i, 1] <- median(TauGamma[i, ])
}
}
tmpMu <- tmpmuq + H %*% tmpGamma
RSS0 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1 <- RSS(Y, matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
for (i in 1:nsim) {
tmpsel <- sample(1:nnsim, 1)
YSim[1:q, i] <- Y[1:q]
for (j in (q + 1):T) {
YSim[j, i] <- Mu[j, tmpsel] +
(YSim[(j - 1):(j - 3), i] - Mu[(j - 1):(j - 3), tmpsel]) %*% Phi[, tmpsel] +
rnorm(1, sd = sqrt(sigma2[tmpsel]))
}
RSS0Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpmuq, ncol = 1))
RSS1Sim[i] <- RSS(YSim[, i], matrix(tmpPhi, ncol = 1),
matrix(tmpMu, ncol = 1))
}
out <- ((RSS0Sim - RSS1Sim) / tmpsigma2) >=
((RSS0 - RSS1) / tmpsigma2)
mean(out)
}
aa <- PPP(Y0, m0$Phi, m0$Mu, H, m0$Tau * m0$Gamma, m0$sigma2, m0$muq)
bb <- PPP(Y1, m1$Phi, m1$Mu, H, m1$Tau * m1$Gamma, m1$sigma2, m1$muq)
aa
bb
Rcpp::compileAttributes()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("BayesianLassoMonitoring")
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
