sim[ii] <- Mu[ii] + (sim[(jj - 1):(jj - q)] - Mu[(jj - 1):(jj - q)]) %*%
Phi + rnorm(1, 0, sqrt(sigma2))
}
sim
}
roxygen2::roxygenise()
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
GibbsRFLSM.sim <- function(Y, Phi, Mu, sigma2) {
TT <- length(Y)
q <- length(Phi)
sim <- rep(NA, TT)
sim[1:q] <- Y[1:q]
for (ii in (q + 1):TT) {
sim[ii] <- Mu[ii] + (sim[(ii - 1):(ii - q)] - Mu[(ii - 1):(ii - q)]) %*%
Phi + rnorm(1, 0, sqrt(sigma2))
}
sim
}
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
sim
tmp
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
tmpV - tmpVas %*% Phihat
tmpVas
dim(tmpVas)
tmp
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
tmp
dim(tmp)
length(tmp)
tmpV
length(tmpV)
dim(tmpVas)
tmpV
dim(tmpV)
length(tmpV)
dim(getV(tmpV, q))
?getV
Muhat
length(Muhat)
tmpV
length(tmpV)
getV(tmpV, 5)
dim(getV(tmpV, 5))
q
GibbsRFLSM.simmax.residual <- function(Y, Phi, Mu, sigma2,
Phihat, Muhat, sigma2hat,
nsim = 1000) {
q <- dim(Phi)[1]
out <- rep(NA, nsim)
m <- dim(Phi)[2]
for (i in seq(nsim)) {
k <- sample(1:m, 1)
tmpPhi <- Phi[, k]
tmpMu <- Mu[, k]
tmpsigma2 <- sigma2[k]
tmp <- GibbsRFLSM.sim(Y, tmpPhi, tmpMu, tmpsigma2)
tmpV <- tmp - Muhat
tmpVas <- getV(tmpV, q)
tmpV <- tmpV[-c(1:q)]
tmpVas <- tmpVas[-c(1:q), ]
out[i] <- max((tmpV - tmpVas %*% Phihat) ^ 2)
}
out
}
debug(GibbsRFLSM.sim)
debug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
tmpVas
dim(tmpVas)
undebug(GibbsRFLSM.sim)
undebug(GibbsRFLSM.simmax.residual)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
cc
tmp <- movingaverages0 - MedianMu
tmpV <- getV(tmp, 5)
tmp <- tmp[-c(1:5)]
tmpV <- tmpV[-c(1:5), ]
tmpV
dim(tmpV)
GibbsRFLSM.simmax.residual <- function(Y, Phi, Mu, sigma2,
Phihat, Muhat, sigma2hat,
nsim = 1000) {
q <- dim(Phi)[1]
out <- rep(NA, nsim)
m <- dim(Phi)[2]
for (i in seq(nsim)) {
k <- sample(1:m, 1)
tmpPhi <- Phi[, k]
tmpMu <- Mu[, k]
tmpsigma2 <- sigma2[k]
tmp <- GibbsRFLSM.sim(Y, tmpPhi, tmpMu, tmpsigma2)
tmpV <- tmp - Muhat
tmpVas <- getV(tmpV, q)
tmpV <- tmpV[-c(1:q)]
tmpVas <- tmpVas[-c(1:q), ]
out[i] <- max((tmpV - tmpVas %*% Phihat) ^ 2 / sigma2hat)
}
out
}
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
tmp <- movingaverages0 - MedianMu
tmpV <- getV(tmp, 5)
tmp <- tmp[-c(1:5)]
tmpV <- tmpV[-c(1:5), ]
tmpresi <- (tmp - tmpV %*% MedianPhi) ^ 2 / Mediansigma2
tmpresi
cc
cc
tmpresi
max(tmpresi)
which.max(tmpresi)
cc
quantile(cc, 0.8)
which(tmpresi > 14.04146)
MedianMu
lower <- sqrt(quantile(cc, 0.8) * Mediansigma2) + tmpV %*% MedianPhi + median(mo0$muq)
lower
upper <- sqrt(quantile(cc, 0.8) * Mediansigma2) + tmpV %*% MedianPhi + median(mo0$muq)
lower <- -sqrt(quantile(cc, 0.8) * Mediansigma2) + tmpV %*% MedianPhi + median(mo0$muq)
upper
lower
upper
which(tmpresi > 14.04146)
shift <- which(tmpresi > 14.04146)
fit <- BayesianLassoMonitoring::Fit(movingaverages0, mo0$Phi, mo0$Mu)
quantileMu <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
quantilefit <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
for (i in 1:dim(mo0$Mu)[1]) {
tmp <- quantile(mo0$Mu[i, ], c(0.025, 0.5, 0.975))
quantileMu[i, ] <- tmp
tmp <- quantile(fit[i, ] - 0.5, c(0.025, 0.5, 0.975))
quantilefit[i, ] <- tmp
}
pvec <- rep(NA, dim(mo0$Gamma)[1])
for (i in 1:dim(mo0$Gamma)[1]) {
pvec[i] <- median(mo0$p[i, ])
}
plot(dat$Freq[sta2017:end2019], type = 'l', ylab = 'Frequency', xlab = '',
main = "Daily Opioid-overdose-related ER Visits \nfrom 2017 to 2019 in Walker County", xaxt='n',
col = 'darkgrey')
tmp <- c((133 - mw + 1):166, (421 - mw + 1):435, (568 - mw + 1):568)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = 120 - 0.5, lty = 1, col = 'red')
abline(v = 166 + 0.5, lty = 1, col = 'red')
abline(v = 408 - 0.5, lty = 1, col = 'red')
abline(v = 435 + 0.5, lty = 1, col = 'red')
abline(v = 555 - 0.5, lty = 1, col = 'red')
abline(v = 568 + 0.5, lty = 1, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
points(movingaverages0 - 0.5, type = 'l', ylab = "Daily Moving Average", xlab = "", xaxt='n')
points(which(pvec > 0.9985245) + 5,
(movingaverages0 - 0.5)[which(pvec > 0.9985245) + 5],
col = 'red', pch = 16)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
legend("topright", legend = c("ER Visit", "Moving Average", "Shift", "Investigation Window"),
lty = c(1, 1, NA, 1), col = c("darkgrey", "black", "red", "red"),
pch = c(NA, NA, 16, NA), ncol = 2)
pp <- rep(NA, 1095)
for (i in seq(1095)) {
tmp <- mean(movingaverages0[i] < aa$Sim0[i, ])
pp[i] <- 2 * min(tmp, 1 - tmp)
}
library(BayesianLassoMonitoring)
library(lubridate)
movaver <- function(x, n = 5){filter(x, rep(1 / n, n), sides = 1)}
#dat <- read.csv(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/Yuhui R21/Daily opioid-overdose-related ER visits in Walker.csv")
#load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2023 Summer/BayesianMonitoring/postermodel.rda')
dat <- read.csv(file = "C:/Users/bolus/Box/Yuhui R21/Daily opioid-overdose-related ER visits in Walker.csv")
load(file = 'C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/postermodel.rda')
mw <- 14
movingaverages <- movaver(dat$Freq + 0.5, mw)
date <- as.Date(dat$Day, "%m/%d/%y")
year <- year(date)
month <- month(date)
sta2017 <- min(which(year == 2017))
end2017 <- max(which(year == 2017))
sta2018 <- min(which(year == 2018))
end2018 <- max(which(year == 2018))
sta2019 <- min(which(year == 2019))
end2019 <- max(which(year == 2019))
sta2017July <- min(which(((year == 2017) * (month == 7)) == 1))
sta2018July <- min(which(((year == 2018) * (month == 7)) == 1))
sta2019July <- min(which(((year == 2019) * (month == 7)) == 1))
movingaverages0 <- movingaverages[sta2017:end2019]
MedianPhi <- rep(NA, 5)
for (i in 1:5) {
MedianPhi[i] <- median(mo0$Phi[i, ])
}
MedianMu <- rep(median(mo0$muq), 1095)
Mediansigma2 <- median(mo0$sigma2)
cc <- GibbsRFLSM.simmax.residual(movingaverages0, mo0$Phi,
matrix(mo0$muq, nrow = 1095, ncol = 1000, byrow = T),
mo0$sigma2,
MedianPhi,
MedianMu,
Mediansigma2,
nsim = 1000)
tmp <- movingaverages0 - MedianMu
tmpV <- getV(tmp, 5)
tmp <- tmp[-c(1:5)]
tmpV <- tmpV[-c(1:5), ]
tmpresi <- (tmp - tmpV %*% MedianPhi) ^ 2 / Mediansigma2
upper <- sqrt(quantile(cc, 0.8) * Mediansigma2) + tmpV %*% MedianPhi + median(mo0$muq)
lower <- -sqrt(quantile(cc, 0.8) * Mediansigma2) + tmpV %*% MedianPhi + median(mo0$muq)
shift <- which(tmpresi > 14.04146)
fit <- BayesianLassoMonitoring::Fit(movingaverages0, mo0$Phi, mo0$Mu)
quantileMu <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
quantilefit <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
for (i in 1:dim(mo0$Mu)[1]) {
tmp <- quantile(mo0$Mu[i, ], c(0.025, 0.5, 0.975))
quantileMu[i, ] <- tmp
tmp <- quantile(fit[i, ] - 0.5, c(0.025, 0.5, 0.975))
quantilefit[i, ] <- tmp
}
pvec <- rep(NA, dim(mo0$Gamma)[1])
for (i in 1:dim(mo0$Gamma)[1]) {
pvec[i] <- median(mo0$p[i, ])
}
plot(dat$Freq[sta2017:end2019], type = 'l', ylab = 'Frequency', xlab = '',
main = "Daily Opioid-overdose-related ER Visits \nfrom 2017 to 2019 in Walker County", xaxt='n',
col = 'darkgrey')
tmp <- c((133 - mw + 1):166, (421 - mw + 1):435, (568 - mw + 1):568)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = 120 - 0.5, lty = 1, col = 'red')
abline(v = 166 + 0.5, lty = 1, col = 'red')
abline(v = 408 - 0.5, lty = 1, col = 'red')
abline(v = 435 + 0.5, lty = 1, col = 'red')
abline(v = 555 - 0.5, lty = 1, col = 'red')
abline(v = 568 + 0.5, lty = 1, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
points(movingaverages0 - 0.5, type = 'l', ylab = "Daily Moving Average", xlab = "", xaxt='n')
points(which(pvec > 0.9985245) + 5,
(movingaverages0 - 0.5)[which(pvec > 0.9985245) + 5],
col = 'red', pch = 16)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
legend("topright", legend = c("ER Visit", "Moving Average", "Shift", "Investigation Window"),
lty = c(1, 1, NA, 1), col = c("darkgrey", "black", "red", "red"),
pch = c(NA, NA, 16, NA), ncol = 2)
target
shifts
shift
128 - 13
416 - 13
563 - 13
fit <- BayesianLassoMonitoring::Fit(movingaverages0, mo0$Phi, mo0$Mu)
quantileMu <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
quantilefit <- matrix(NA, nrow = dim(mo0$Mu)[1], ncol = 3)
for (i in 1:dim(mo0$Mu)[1]) {
tmp <- quantile(mo0$Mu[i, ], c(0.025, 0.5, 0.975))
quantileMu[i, ] <- tmp
tmp <- quantile(fit[i, ] - 0.5, c(0.025, 0.5, 0.975))
quantilefit[i, ] <- tmp
}
pvec <- rep(NA, dim(mo0$Gamma)[1])
for (i in 1:dim(mo0$Gamma)[1]) {
pvec[i] <- median(mo0$p[i, ])
}
plot(dat$Freq[sta2017:end2019], type = 'l', ylab = 'Frequency', xlab = '',
main = "Daily Opioid-overdose-related ER Visits \nfrom 2017 to 2019 in Walker County", xaxt='n',
col = 'darkgrey')
tmp <- c((133 - mw + 1):166, (421 - mw + 1):435, (568 - mw + 1):568)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = 115 + 5 - 0.5, lty = 1, col = 'red')
abline(v = 161 + 5 + 0.5, lty = 1, col = 'red')
abline(v = 403 + 5 - 0.5, lty = 1, col = 'red')
abline(v = 430 + 5 + 0.5, lty = 1, col = 'red')
abline(v = 550 + 5 - 0.5, lty = 1, col = 'red')
abline(v = 563 + 5 + 0.5, lty = 1, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
points(movingaverages0 - 0.5, type = 'l', ylab = "Daily Moving Average", xlab = "", xaxt='n')
points(shift + 5,
(movingaverages0 - 0.5)[shift + 5],
col = 'red', pch = 16)
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'lightgrey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'lightgrey')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
legend("topright", legend = c("ER Visit", "Moving Average", "Shift", "Investigation Window"),
lty = c(1, 1, NA, 1), col = c("darkgrey", "black", "red", "red"),
pch = c(NA, NA, 16, NA), ncol = 2)
lower
upper
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(c(rep(NA, 5), pvec))
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'grey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'grey')
abline(h = 0.9985245, lty = 2, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
legend("topright", legend = "Cut-off (Sidak)", lty = 2, col = 'red')
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0)
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0, type = 'l', lty = 1, col = 'black')
points(movingaverages0, type = 'l', lty = 1, col = 'black')
points(upper, type = 'l', lty = 1, col = 'pink')
points(lower, type = 'l', lty = 1, col = 'pink')
length(upper)
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0, type = 'l', lty = 1, col = 'black')
points(c(rep(NA, 5), upper), type = 'l', lty = 1, col = 'pink')
points(c(rep(NA, 5), lower), type = 'l', lty = 1, col = 'pink')
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0- 0.5, type = 'l', lty = 1, col = 'black')
points(c(rep(NA, 5), upper- 0.5), type = 'l', lty = 1, col = 'pink')
points(c(rep(NA, 5), lower- 0.5), type = 'l', lty = 1, col = 'pink')
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'grey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'grey')
abline(h = 0.9985245, lty = 2, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
legend("topright", legend = "Cut-off (Sidak)", lty = 2, col = 'red')
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0- 0.5, type = 'l', lty = 1, col = 'black')
points(c(rep(NA, 5), upper- 0.5), type = 'l', lty = 1, col = 'pink')
points(c(rep(NA, 5), lower- 0.5), type = 'l', lty = 1, col = 'pink')
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'grey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'grey')
abline(h = 0.9985245, lty = 2, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
plot(c(1, 1095), c(min(lower, upper, movingaverages0), max(lower, upper, movingaverages0)), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0- 0.5, type = 'l', lty = 1, col = 'black')
points(c(rep(NA, 5), upper- 0.5), type = 'l', lty = 1, col = 'pink')
points(c(rep(NA, 5), lower- 0.5), type = 'l', lty = 1, col = 'pink')
abli
plot(c(1, 1095), c(min(lower, upper, movingaverages0) - 0.5,
max(lower, upper, movingaverages0) - 0.5), type = 'n', xlab = '',
ylab = 'Moving Average', xaxt='n', main = "Residual-based Chart")
points(movingaverages0- 0.5, type = 'l', lty = 1, col = 'black')
points(c(rep(NA, 5), upper- 0.5), type = 'l', lty = 1, col = 'pink')
points(c(rep(NA, 5), lower- 0.5), type = 'l', lty = 1, col = 'pink')
abline(v = sta2018 - sta2017 + 1, lty = 2, col = 'grey')
abline(v = sta2019 - sta2017 + 1, lty = 2, col = 'grey')
abline(h = 0.9985245, lty = 2, col = 'red')
axis(side = 1, at = c(sta2018 - sta2017 + 1,
sta2019 - sta2017 + 1,
sta2017July - sta2017 + 1,
sta2018July - sta2017 + 1,
sta2019July  - sta2017 + 1
),
labels = c("1/1/2018",
"1/1/2019",
NA,
NA,
NA))
points(shift + 5,
(movingaverages0 - 0.5)[shift + 5],
col = 'red', pch = 16)
161 - 115 + 1
430 - 403 + 1
563 - 550 + 1
