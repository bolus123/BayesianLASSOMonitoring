"lambda2alpha" = 1,
"lambda2beta" = 1
)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = pars, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
out2
?arima
?arima
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
dim(X)
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X,
pars$lambda2)
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X,
as.matrix(pars$lambda2))
X
Y
bset
pars$lambda2
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
arima(Y, order = c(3, 0, 0), xreg = X)
aaa <- arima(Y, order = c(3, 0, 0), xreg = X)
aaa$coef
aaa
aaa$sigma2
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
init
init <- initGibbsRFLSMXcpp(Y, bset, 1e-6,
X, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
nsim = 1, by = 1, burnin = 1, tol = 1e-6,
X = X, H = H)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
init
pars$Tau
init$Tau
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 0,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, pars$lambda2)
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
H
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
init
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
tol = 1e-6,
X = X, H = H)
out2
X <- 1:100
n <- 100
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[51:100] <- Y[51:100] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2)
)
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2flg" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1
)
init <- initGibbsRFLSMXcpp(Y, bset,
X, H, pars$lambda2)
out1 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = init, bset = bset,
tol = 1e-6,
X = X, H = H)
out2 <- GibbsRFLSMXUpdatecpp(Y = Y, pars = out1, bset = bset,
tol = 1e-6,
X = X, H = H)
out2
out1
out2
init
out2
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-xx")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
debug(BayesianLASSOMonitoring::GibbsRFLSMX)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
bset
bset
bset <- function(X = NULL, method = "ALASSO", phimono = TRUE, phiq = 5, phiA = diag(nrow = phiq), phibound0 = Inf, phiboundqplus1 = 0,
betaA = ifelse(class(X)[1] == "matrix", dim(X)[2], 1), gammaxi2 = 0.1, tautheta1 = 1, tautheta2 = 1,
sigma2a = 1, sigma2b = 1, lambda2 = NULL, updatelambda2 = TRUE, lambda2alpha = 0.1, lambda2beta = 0.1,
theta = NULL, YJ = TRUE, updateYJ = TRUE, leftcensoring = TRUE, lowerbound = 0, rounding = TRUE) {
bset <- list(
"method" = method,
"phimono" = ifelse(phimono, 1, 0),
"phiq" = phiq,
"phiA" = phiA,
"phibound0" = phibound0,
"phiboundqplus1" = phiboundqplus1,
"betaA" = betaA,
"gammaxi2" = gammaxi2,
"tautheta1" = tautheta1,
"tautheta2" = tautheta2,
"sigma2a" = sigma2a,
"sigma2b" = sigma2b,
"lambda2" = lambda2,
"updatelambda2" = ifelse(updatelambda2, 1, 0),
"lambda2alpha" = lambda2alpha,
"lambda2beta" = lambda2beta,
"theta" = theta,
"YJ" = ifelse(YJ, 1, 0),
"updateYJ" = ifelse(updateYJ, 1, 0),
"leftcensoring" = ifelse(leftcensoring, 1, 0),
"lowerbound" = lowerbound,
"rounding" = ifelse(rounding, 1, 0)
)
return(bset)
}
bset <- bset()
bset
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
bset
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
Y
Y1
Y1
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183, 365)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 9
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(1, TT1 - q, 7)]
H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
Y1
bset <- bset()
Rcpp::compileAttributes()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
X <- 1:300
n <- 300
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[151:200] <- Y[151:200] + 1
H <- getHMatMT(n, 3)
library(BayesianLASSOMonitoring)
X <- 1:300
n <- 300
innov <- rnorm(n)
innov <- innov + X * 0.0025
Y <- arima.sim(list(ar = c(0.5, 0.2, 0.1)), n = n, innov = innov)
Y[151:200] <- Y[151:200] + 1
H <- getHMatMT(n, 3)
X <- as.matrix(X)
Y <- as.matrix(Y)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = as.matrix(0.00125),
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2, c(0.00125) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05, 0.00125)) ^ 2),
"theta" = 1
)
pars <- list(
"Phi" = as.matrix(c(0.25, 0.1, 0.05)),
"Beta" = NULL,
"Tau" = as.matrix(rep(0, 97)),
"Gamma" = as.matrix(rnorm(97, 0, sqrt(0.1))),
"mu0" = 0,
"Mu" = 0 + X %*% 0.00125,
"eta2" = as.matrix(c(c(c(0.25, 0.1, 0.05)) ^ 2)),
"sigma2" = 1,
"lambda2" = as.matrix((1 / c(0.25, 0.1, 0.05)) ^ 2),
"theta" = 1
)
bset <- list(
"method" = "ALASSO",
"phimono" = 0,
"phiq" = 3,
"phiA" = diag(nrow = 3),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"lowerbound" = 1,
"rounding" = 1
)
##############################################
lambda2 <- pars$lambda2
theta <- pars$theta
Yyj <- yeojohnsontr(Y, theta, 1e-6)
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183, 365)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 9
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(1, TT1 - q, 7)]
H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- BayesianLASSOMonitoring::bset()
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
GibbsRFLSMXcpp
Y1
bset
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
yy <- GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
yy <- GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
yy <- GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
yy <- GibbsRFLSMXcpp(Y1, bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMXcpp(matrix(Y1, ncol = 1), bset, 1e-6, 100, 10, 1000, 1, H = H1)
yy <- GibbsRFLSMXcpp(matrix(Y1, ncol = 1), bset, 1e-6, 100, 10, 1000, 1, H = H1)
H1
matrix(Y1, ncol = 1)
yy <- GibbsRFLSMXcpp(matrix(Y1, ncol = 1), bset, 1e-6, 100, 10, 1000, 1, H = H1)
xx <- BayesianLASSOMonitoring::GibbsRFLSMX(Y1, H = H1, bset = bset)
roxygen2::roxygenise()
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
