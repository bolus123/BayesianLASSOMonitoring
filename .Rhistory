}
ee3$Phi[1, ]
median(ee3$Phi[1, ])
median(ee3$Phi[2, ])
median(ee3$Phi[3, ])
median(ee3$Phi[4, ])
median(ee3$Phi[5, ])
ee3$Yyj
ee3$theta
ee3$lambda2
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
}
ee3$Yyj
ee3$Yyj[, 1]
ee3$Phi[, 1]
ee3$Phi[1, ]
hist(ee3$Phi[1, ])
hist(ee3$Phi[2, ])
hist(ee3$Phi[3, ])
hist(ee3$theta)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
}
ee3$Yyj
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
}
ee3$Yyj
dim(ee3$Yyj)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
ee3$Yyj
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ee3 <- GibbsRFLSMYeoJohnsoncpp(Y, q = 5,
A = diag(nrow = 5), a = 1, b = 1, alpha = 1, beta = 1,
theta1 = 1, theta2 = 1, xi2 = 1,
method = "MT", bound0 = Inf, boundqplus1 = 0,
updateYJ = 1, theta = 1,
updateZ = 1, eps = 1e-6,
nsim = 1000, by = 1, burnin = 1000,
tol = 1e-32, NULL, NULL, NULL)
ee3$Yyj
ee3$Yyj
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
}
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
fitmat <- matrix(NA, T - q, nsim)
fitmat <- matrix(NA, T - q, 1000)
fitmat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(ee3$Yyj[, i], theta, eps)
}
i
ee3$Yyj[, i]
fitmat[, i] <- getfit(ee3$Yyj[, i], theta[i], 1e-6)
fitmat[, i] <- getfit(ee3$Yyj[, i], ee3$theta[i], 1e-6)
fitmat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(ee3$Yyj[, i], ee3$Phi[, i], ee3$Mu[, i], ee3$theta[i], 1e-6)
}
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
fitmat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(ee3$Yyj[, i], ee3$Phi[, i], ee3$Mu[, i], ee3$theta[i], 1e-6)
}
i
fitmat[, i] <- getfit(ee3$Yyj[, i], ee3$Phi[, i], ee3$Mu[, i], ee3$theta[i], 1e-6)
getfittr(ee3$Yyj[, i], ee3$Phi[, i], ee3$Mu[, i], ee3$theta[i], 1e-6)
matrix(ee3$Yyj[, i])
getfittr(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
getfittr(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
getfittr(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
getfittr(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
fitmat[which(fitmat[, i] < 0), i] <- 0
}
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
#fitmat[which(fitmat[, i] < 0), i] <- 0
}
getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
i
i
getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ee3$Mu
ee3$Mu[, 1]
ee3$Mu[, 2]
getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
fitmat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
#fitmat[which(fitmat[, i] < 0), i] <- 0
}
fitmat
fitmat[, 1]
fitmat[which(fitmat < 0)] <- 0
fit
fitmat
plot(fitmat[, 1])
rowMeans(fitmat)
points(rowMeans(fitmat), type = 'l')
fitmat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
#
}
fitmat[which(fitmat < 0)] <- 0
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(fitmat[, i], col = 'grey', type = 'l')
}
plot(c(1, 100), c(min(fitmat, Y), max(fitmat, Y)), type = 'n')
for (i in 1:1000) {
points(fitmat[, i], col = 'grey', type = 'l')
}
dim(fitmat)
plot(c(1, 95), c(min(fitmat, Y), max(fitmat, Y)), type = 'n')
for (i in 1:1000) {
points(fitmat[, i], col = 'grey', type = 'l')
}
points(Y[6:100], type = 'l')
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
qq <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
qq
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
fitmat[which(fitmat < 0)] <- 0
plot(c(1, 95), c(min(fitmat, Y), max(fitmat, Y)), type = 'n')
for (i in 1:1000) {
points(ph1mat[, i], col = 'grey', type = 'l')
}
points(Y[6:100], type = 'l')
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
fitmat[which(fitmat < 0)] <- 0
plot(c(1, 95), c(min(ph1mat, Y), max(ph1mat, Y)), type = 'n')
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
plot(c(1, 95), c(min(ph1mat, Y), max(ph1mat, Y)), type = 'n')
plot(c(1, 95), c(min(ph1mat, Y), max(ph1mat, Y)), type = 'n')
ph1mat
ph1mat[, 1]
ph1mat[, 2]
ph1mat[, 3]
ph1mat[, 4]
ph1mat[, 5]
ph1mat[, 6]
plot(c(1, 95), c(min(ph1mat, Y), max(ph1mat, Y)), type = 'n')
min(ph1mat, Y)
any(is.na(ph1mat))
show
plot(c(1, 95), c(min(ph1mat, Y, na.rm = TRUE), max(ph1mat, Y, na.rm = TRUE)), type = 'n')
for (i in 1:1000) {
points(ph1mat[, i], col = 'grey', type = 'l')
}
points(Y[6:100], type = 'l')
ee3$theta
hist(, na.rm = TRUE)
hist(ee3$theta)
hist(ee3$Yyj[, 1])
hist(ee3$Yyj[, 2])
hist(ee3$Yyj[, 3])
hist(ee3$Yyj[, 4])
hist(ee3$Yyj[, 5])
hist(ee3$Yyj[, 6])
hist(ee3$Yyj[, 7])
hist(ee3$Yyj[, 8])
hist(ee3$Yyj[, 9])
hist(ee3$Yyj[, 10])
hist(ee3$Yyj[, 11])
hist(ee3$Yyj[, 12])
hist(ee3$Yyj[, 13])
hist(ee3$Yyj[, 14])
hist(ee3$Yyj[, 15])
hist(ee3$Yyj[, 16])
hist(ee3$Yyj[, 17])
hist(ee3$Yyj[, 20])
hist(ee3$Yyj[, 30])
quant <- matrix(NA, 95, 2)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.975))
}
quant <- matrix(NA, 95, 2)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.975), na.rm = TRUE)
}
quant
plot(c(1, 95), c(min(ph1mat, Y, na.rm = TRUE), max(ph1mat, Y, na.rm = TRUE)), type = 'n')
for (i in 1:1000) {
points(ph1mat[, i], col = 'grey', type = 'l')
}
points(Y[6:100], type = 'l')
quant <- matrix(NA, 95, 2)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.95), na.rm = TRUE)
}
points(quant[, 2], col = 'red')
quant <- matrix(NA, 95, 2)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.95), na.rm = TRUE)
}
plot(c(1, 95), c(min(quant, Y, na.rm = TRUE), max(quant, Y, na.rm = TRUE)), type = 'n')
for (i in 1:1000) {
points(ph1mat[, i], col = 'grey', type = 'l')
}
points(Y[6:100], type = 'l')
points(quant[, 2], col = 'red', type = 'l')
quant <- matrix(NA, 95, 2)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.95), na.rm = TRUE)
}
plot(c(1, 95), c(min(quant, Y, na.rm = TRUE), max(quant, Y, na.rm = TRUE)), type = 'n')
points(Y[6:100], type = 'l')
points(quant[, 2], col = 'red', type = 'l')
hph1mat
ph1mat
ph1mat[, 1]
ph1mat[1, ]
hist(ph1mat[1, ])
hist(ph1mat[2, ])
hist(ph1mat[3, ])
hist(ph1mat[4, ])
hist(ph1mat[5, ])
hist(ph1mat[6, ])
hist(ph1mat[7, ])
ph1mat[1, ]
ph1mat
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
fitmat[which(fitmat < 0)] <- 0
quant <- matrix(NA, 95, 2)
medianmat <- matrix(NA, 95, 1)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.025, 0.95), na.rm = TRUE)
medianmat[i, ] <- median(ph1mat[i, ], na.rm = TRUE)
}
plot(c(1, 95), c(min(quant, Y, na.rm = TRUE), max(quant, Y, na.rm = TRUE)), type = 'n')
points(Y[6:100], type = 'l')
points(quant[, 2], col = 'red', type = 'l')
points(medianmat, col = 'blue', type = 'l')
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
fitmat[which(fitmat < 0)] <- 0
quant <- matrix(NA, 95, 2)
medianmat <- matrix(NA, 95, 1)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.25, 0.75), na.rm = TRUE)
medianmat[i, ] <- median(ph1mat[i, ], na.rm = TRUE)
}
plot(c(1, 95), c(min(quant, Y, na.rm = TRUE), max(quant, Y, na.rm = TRUE)), type = 'n')
points(Y[6:100], type = 'l')
points(quant[, 2], col = 'red', type = 'l')
points(medianmat, col = 'blue', type = 'l')
quant[, 1]
test <- medianmat / (quant[, 2] - quant[, 1])
test
plot(test)
// [[Rcpp::export]]
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(100, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(100, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i])
ff <- simYyjph2(100, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i])
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(100, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i])
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(100, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i])
ff
ee3$Mu[, i]
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
ff
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
ff
95+95
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
ff
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
matrix(c(ee3$Mu[, i], ee3$Mu[, i]))
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
ff
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff1 <- simYph1(matrix(95, ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
ff <- simYyjph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i])
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
ff1 <- simYph2(matrix(95, ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
matrix(c(ee3$Mu[, i], ee3$Mu[, i]))
ff1 <- simYph2(95, ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
ff1 <- simYph2(95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
ff1
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh <- simYph1mat(10, 95, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh <- simYph1mat(10,  matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(c(ee3$Mu[, i], ee3$Mu[, i])), ee3$sigma2[i], ee3$theta[i], 1e-6)
simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh <- simYph1(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
length(simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6))
length(ee3$Yyj[, i])
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh <- simYph1mat(10, matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
hh1 <- hh <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh1 <- hh <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh1 <- hh <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
hh1 <- hh <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
hh1 <- hh <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
hh1 <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
hh1 <- simYph1mat(10, ee3$Yyj, ee3$Phi, ee3$Mu, ee3$sigma2, ee3$theta, 1e-6)
fitmat <- matrix(NA, 95, 1000)
ph1mat <- matrix(NA, 95, 1000)
plot(c(1, 100), c(min(ee3$Yyj), max(ee3$Yyj)), type = 'n')
for (i in 1:1000) {
points(ee3$Yyj[, i], col = 'grey', type = 'l')
fitmat[, i] <- getfit(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$theta[i], 1e-6)
ph1mat[, i] <- simYph1(matrix(ee3$Yyj[, i]), matrix(ee3$Phi[, i]), matrix(ee3$Mu[, i]), ee3$sigma2[i], ee3$theta[i], 1e-6)
}
fitmat[which(fitmat < 0)] <- 0
quant <- matrix(NA, 95, 2)
medianmat <- matrix(NA, 95, 1)
for (i in 1:95) {
quant[i, ] <- quantile(ph1mat[i, ], c(0.25, 0.75), na.rm = TRUE)
medianmat[i, ] <- median(ph1mat[i, ], na.rm = TRUE)
}
test <- medianmat / (quant[, 2] - quant[, 1])
plot(c(1, 95), c(min(quant, Y, na.rm = TRUE), max(quant, Y, na.rm = TRUE)), type = 'n')
points(Y[6:100], type = 'l')
points(quant[, 2], col = 'red', type = 'l')
points(medianmat, col = 'blue', type = 'l')
ee3
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
warnings()
remove.packages("BayesianLASSOMonitoring")
Rcpp::compileAttributes()
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
?devtools::github_pull
?devtools::install_github
devtools::install_github("embruna/refnet",
ref = "with-transformation", subdir = "pkg")
devtools::install_github("bolus123/BayesianLASSOMonitoring",
ref = "with-transformation", subdir = "pkg")
devtools::install_github("bolus123/BayesianLASSOMonitoring",
ref = "with-transformation")
devtools::install_github("bolus123/BayesianLASSOMonitoring",
ref = "with-transformation")
library(parallel)
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183)
#TT1 <- c(92)
TT2 <- 365
w <- c(1, 3, 7, 14, 28)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 10
X <- 1
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
Rcpp::compileAttributes()
remove.packages("BayesianLASSOMonitoring")
