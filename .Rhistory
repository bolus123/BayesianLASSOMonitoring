bset <- bset1
chart1 <- try(BayesianLASSOMonitoring::GibbsRFLSMX(Y1, bset, H = H1))
chart1
chart1$Z[, 1]
bset
chart1$Z[, 1]
bset1 <- list(
"method" = "MT",
"phimono" = 0,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
bset2 <- bset1
bset2$method <- "regression"
bset2$phimono <- 0
bset3 <- bset1
bset3$method <- "LASSO"
bset3$phimono <- 0
bset4 <- bset1
bset4$method <- "ALASSO"
bset4$phimono <- 1
bset5 <- bset1
bset5$method <- "LASSO"
bset5$phimono <- 1
bset6 <- bset1
bset6$method <- "ALASSO"
bset6$phimono <- 1
bset <- bset1
chart1 <- try(BayesianLASSOMonitoring::GibbsRFLSMX(Y1, bset, H = H1))
Mu <- chart1$mu0[1]  + H1 %*% (chart1$Tau[, 1] * chart1$Gamma[, 1])
aa <- getYZMHX(Y1, as.matrix(chart1$Phi[, 1]),
as.matrix(Mu), chart1$sigma2[1], chart1$theta[1],
as.matrix(rep(0, length(Y1))),
1, 1,
0, 1, 1e-32)
chart1$Z
cbind(Y1, chart1$Z[, 1])
cbind(Y1, chart1$Z[, 3])
cbind(Y1, chart1$Z[, 100])
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Mu <- chart1$mu0[1]  + H1 %*% (chart1$Tau[, 1] * chart1$Gamma[, 1])
aa <- getYZMHX(Y1, as.matrix(chart1$Phi[, 1]),
as.matrix(Mu), chart1$sigma2[1], chart1$theta[1],
as.matrix(rep(0, length(Y1))),
1, 1,
0, 1, 1e-32)
aa
bb <- cbind(Y1, aa, aa - Y1)
bb
chart1$Z[, 1]
chart1$Z[1, ]
hist(chart1$Z[1, ])
hist(chart1$Z[2, ])
hist(chart1$Z[3, ])
hist(chart1$Z[4, ])
hist(chart1$Z[5, ])
hist(chart1$Z[6, ])
hist(chart1$Z[7, ])
hist(chart1$Z[8, ])
hist(chart1$Z[10, ])
hist(chart1$Z[100, ])
chart1$theta
hist(chart1$theta)
chart1$Y + chart1$Z
ee <- chart1$Y + chart1$Z
hist(ee[1, ])
hist(ee[2, ])
hist(ee[3, ])
hist(ee[4, ])
hist(ee[5, ])
hist(ee[6, ])
plot(Y1)
chart2 <- try(BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(chart1, bset, FAP0 = FAP0, side = side), silent = TRUE)
chart2
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x"
)
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 1000
TT1 <- c(92, 183)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 8
cat("start at X:", X, "\n")
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
bset1 <- list(
"method" = "MT",
"phimono" = 0,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
bset2 <- bset1
bset2$method <- "regression"
bset2$phimono <- 0
bset3 <- bset1
bset3$method <- "LASSO"
bset3$phimono <- 0
bset4 <- bset1
bset4$method <- "ALASSO"
bset4$phimono <- 1
bset5 <- bset1
bset5$method <- "LASSO"
bset5$phimono <- 1
bset6 <- bset1
bset6$method <- "ALASSO"
bset6$phimono <- 1
chart1 <- try(BayesianLASSOMonitoring::GibbsRFLSMX(Y1, bset, H = H1))
bset <- bset1
chart1 <- try(BayesianLASSOMonitoring::GibbsRFLSMX(Y1, bset, H = H1))
chart2 <- try(BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(chart1, bset, FAP0 = FAP0, side = side), silent = TRUE)
chart2
chart2$grandsig
chart2$sig
183 * 0.8
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
if (class(chart1)[1] != "try-error") {
tmpMu1 <- H1 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- H2 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- rbind(tmpMu1, tmpMu2)
for (ii in 1:10000) {
tmpsel <- sample(1:300, 1)
tmp <- BayesianLASSOMonitoring::simYXph2(length(Y2), as.matrix(chart1$Y), as.matrix(chart1$Phi[, tmpsel]), as.matrix(tmpMu2[, tmpsel] + chart1$mu0[tmpsel]),
chart1$sigma2[tmpsel], chart1$theta[tmpsel], 1e-32,
1, 0, 1, as.matrix(chart1$Z[, tmpsel]))
Yph1[, ii] <- tmp[1:length(chart1$Y)]
Yph2[, ii] <- tmp[(length(chart1$Y) + 1):length(tmp)]
}
}
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
if (class(chart1)[1] != "try-error") {
tmpMu1 <- H1 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- H2 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- rbind(tmpMu1, tmpMu2)
for (ii in 1:10000) {
tmpsel <- sample(1:300, 1)
tmp <- BayesianLASSOMonitoring::simYXph2(length(Y2), as.matrix(chart1$Y), as.matrix(chart1$Phi[, tmpsel]), as.matrix(tmpMu2[, tmpsel] + chart1$mu0[tmpsel]),
chart1$sigma2[tmpsel], chart1$theta[tmpsel], 1e-32,
1, 1, as.matrix(chart1$Z[, tmpsel]))
Yph1[, ii] <- tmp[1:length(chart1$Y)]
Yph2[, ii] <- tmp[(length(chart1$Y) + 1):length(tmp)]
}
}
Yph1
Yph1[1, ]
Yph1[, 1]
Yph1[, 2]
Yph2
Yph2[, 1]
ph1pest <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pest[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
ph2pest <- rep(NA, length(Y2))
if (class(chart1)[1] != "try-error") {
for (ii in 1:length(Y2)) {
ph2pest[ii] <- median(Yph2[ii, ], na.rm = TRUE)
}
}
ph1pest
ph2pest
plot(rowMeans(chart1$Gamma * chart1$Tau))
plot(rowMeans(chart1$H %*% (chart1$Gamma * chart1$Tau)))
plot(rowMeans(chart1$mu0 + chart1$H %*% (chart1$Gamma * chart1$Tau)))
plot(rowMeans(diff(chart1$H %*% (chart1$Gamma * chart1$Tau))))
plot(Y1)
Yph1
rowMeans(Yph1)
plot(rowMeans(Yph1))
ph1pest <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pest[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
ph2pest <- rep(NA, length(Y2))
if (class(chart1)[1] != "try-error") {
for (ii in 1:length(Y2)) {
ph2pest[ii] <- median(Yph2[ii, ], na.rm = TRUE)
}
}
out <- rep(NA, 6)
if ((class(chart1)[1] != "try-error") & (class(chart2)[1] != "try-error")) {
q <- dim(chart1$Phi)[1]
start.exact <- ceiling(TT1 * tt)
end <- ceiling(TT1 * tt)
TP.app <- sum(chart2$sig[start.exact:end], na.rm =TRUE)
FN.app <- sum(1 - chart2$sig[start.exact:end], na.rm =TRUE)
sensitivity.app <- TP.app / (TP.app + FN.app)
TN.app <- sum(1 - chart2$sig[-c(start.exact:end)], na.rm =TRUE)
FP.app <- sum(chart2$sig[-c(start.exact:end)], na.rm =TRUE)
specificity.app <- TN.app / (TN.app + FP.app)
ppv.app <- TP.app / (TP.app + FP.app)
sig <- chart2$grandsig
RMSE.ph1 <- sqrt(mean((Y1 - ph1pest) ^ 2, na.rm = TRUE))
RMSE.ph2 <- sqrt(mean((Y2 - ph2pest) ^ 2, na.rm = TRUE))
out <- c(sig,
sensitivity.app,
specificity.app,
ppv.app,
RMSE.ph1,
RMSE.ph2)
}
out
ph1pestmedian <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pestmedian[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
ph1pestmean <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
ph1pestmean <- rowMeans(Yph1, na.rm = TRUE)
}
ph1pestmean
ph2pestmean <- rep(NA, length(Y2))
if ((class(chart1)[1] != "try-error")) {
ph2pestmean <- rowMeans(Yph2, na.rm = TRUE)
}
ph2pestmean
ph1pestmedian <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pestmedian[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
ph1pestmean <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
ph1pestmean <- rowMeans(Yph1, na.rm = TRUE)
}
ph2pestmedian <- rep(NA, length(Y2))
if (class(chart1)[1] != "try-error") {
for (ii in 1:length(Y2)) {
ph2pestmedian[ii] <- median(Yph2[ii, ], na.rm = TRUE)
}
}
ph2pestmean <- rep(NA, length(Y2))
if ((class(chart1)[1] != "try-error")) {
ph2pestmean <- rowMeans(Yph2, na.rm = TRUE)
}
out <- rep(NA, 6)
if ((class(chart1)[1] != "try-error") & (class(chart2)[1] != "try-error")) {
q <- dim(chart1$Phi)[1]
start.exact <- ceiling(TT1 * tt)
end <- ceiling(TT1 * tt)
TP.app <- sum(chart2$sig[start.exact:end], na.rm =TRUE)
FN.app <- sum(1 - chart2$sig[start.exact:end], na.rm =TRUE)
sensitivity.app <- TP.app / (TP.app + FN.app)
TN.app <- sum(1 - chart2$sig[-c(start.exact:end)], na.rm =TRUE)
FP.app <- sum(chart2$sig[-c(start.exact:end)], na.rm =TRUE)
specificity.app <- TN.app / (TN.app + FP.app)
ppv.app <- TP.app / (TP.app + FP.app)
sig <- chart2$grandsig
RMSE.ph1.median <- sqrt(mean((Y1 - ph1pestmedian) ^ 2, na.rm = TRUE))
RMSE.ph2.median <- sqrt(mean((Y2 - ph2pestmedian) ^ 2, na.rm = TRUE))
RMSE.ph1.mean <- sqrt(mean((Y1 - ph1pestmean) ^ 2, na.rm = TRUE))
RMSE.ph2.mean <- sqrt(mean((Y2 - ph2pestmean) ^ 2, na.rm = TRUE))
out <- c(sig,
sensitivity.app,
specificity.app,
ppv.app,
RMSE.ph1.median,
RMSE.ph2.median,
RMSE.ph1.mean,
RMSE.ph2.mean)
}
return(out)
RMSE.ph1.mean <- sqrt(mean((Y1 - ph1pestmean) ^ 2, na.rm = TRUE))
RMSE.ph2.mean <- sqrt(mean((Y2 - ph2pestmean) ^ 2, na.rm = TRUE))
RMSE.ph1.mean
RMSE.ph2.mean
ph1pestmedian
ph1pestmean
out <- c(sig,
sensitivity.app,
specificity.app,
ppv.app,
RMSE.ph1.median,
RMSE.ph2.median,
RMSE.ph1.mean,
RMSE.ph2.mean)
out
pars[, 8]
pars[8, ]
pars
Xx ,- 6
X <- 6
cat("start at X:", X, "\n")
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
bset1 <- list(
"method" = "MT",
"phimono" = 0,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
bset2 <- bset1
bset2$method <- "regression"
bset2$phimono <- 0
bset3 <- bset1
bset3$method <- "LASSO"
bset3$phimono <- 0
bset4 <- bset1
bset4$method <- "ALASSO"
bset4$phimono <- 1
bset5 <- bset1
bset5$method <- "LASSO"
bset5$phimono <- 1
bset6 <- bset1
bset6$method <- "ALASSO"
bset6$phimono <- 1
chart1 <- try(BayesianLASSOMonitoring::GibbsRFLSMX(Y1, bset, H = H1))
chart2 <- try(BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(chart1, bset, FAP0 = FAP0, side = side), silent = TRUE)
chart22
chart2
chart2$grandsig
chart2$adj.alpha
chart2$sig
chart1$Z[, 1]
plot
plot(chart1$Y + chart1$Z[, 1])
plot(chart1$Y + chart1$Z[, 2])
plot(chart1$Y + chart1$Z[, 3])
plot(chart1$Y + chart1$Z[, 4])
plot(chart1$Y + chart1$Z[, 5])
plot(chart1$Y + chart1$Z[, 100])
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
if (class(chart1)[1] != "try-error") {
tmpMu1 <- H1 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- H2 %*% (chart1$Gamma * chart1$Tau)
tmpMu2 <- rbind(tmpMu1, tmpMu2)
for (ii in 1:10000) {
tmpsel <- sample(1:300, 1)
tmp <- BayesianLASSOMonitoring::simYXph2(length(Y2), as.matrix(chart1$Y), as.matrix(chart1$Phi[, tmpsel]), as.matrix(tmpMu2[, tmpsel] + chart1$mu0[tmpsel]),
chart1$sigma2[tmpsel], chart1$theta[tmpsel], 1e-32,
1, 1, as.matrix(chart1$Z[, tmpsel]))
Yph1[, ii] <- tmp[1:length(chart1$Y)]
Yph2[, ii] <- tmp[(length(chart1$Y) + 1):length(tmp)]
}
}
ph1pestmedian <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pestmedian[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
ph1pestmean <- rep(NA, length(Y1))
if ((class(chart1)[1] != "try-error")) {
ph1pestmean <- rowMeans(Yph1, na.rm = TRUE)
}
ph2pestmedian <- rep(NA, length(Y2))
if (class(chart1)[1] != "try-error") {
for (ii in 1:length(Y2)) {
ph2pestmedian[ii] <- median(Yph2[ii, ], na.rm = TRUE)
}
}
ph2pestmean <- rep(NA, length(Y2))
if ((class(chart1)[1] != "try-error")) {
ph2pestmean <- rowMeans(Yph2, na.rm = TRUE)
}
ph1pestmedian
ph2pestmean
ph2pestmedian
ph2pestmean
ph2pestmedian
out <- rep(NA, 6)
if ((class(chart1)[1] != "try-error") & (class(chart2)[1] != "try-error")) {
q <- dim(chart1$Phi)[1]
start.exact <- ceiling(TT1 * tt)
end <- ceiling(TT1 * tt)
TP.app <- sum(chart2$sig[start.exact:end], na.rm =TRUE)
FN.app <- sum(1 - chart2$sig[start.exact:end], na.rm =TRUE)
sensitivity.app <- TP.app / (TP.app + FN.app)
TN.app <- sum(1 - chart2$sig[-c(start.exact:end)], na.rm =TRUE)
FP.app <- sum(chart2$sig[-c(start.exact:end)], na.rm =TRUE)
specificity.app <- TN.app / (TN.app + FP.app)
ppv.app <- TP.app / (TP.app + FP.app)
sig <- chart2$grandsig
RMSE.ph1.median <- sqrt(mean((Y1 - ph1pestmedian) ^ 2, na.rm = TRUE))
RMSE.ph2.median <- sqrt(mean((Y2 - ph2pestmedian) ^ 2, na.rm = TRUE))
RMSE.ph1.mean <- sqrt(mean((Y1 - ph1pestmean) ^ 2, na.rm = TRUE))
RMSE.ph2.mean <- sqrt(mean((Y2 - ph2pestmean) ^ 2, na.rm = TRUE))
out <- c(sig,
sensitivity.app,
specificity.app,
ppv.app,
RMSE.ph1.median,
RMSE.ph2.median,
RMSE.ph1.mean,
RMSE.ph2.mean)
}
out
chart2
chart1$Z[, 100]
chart1$Z[, 200]
chart1$Z[, 300]
chart1$theta
