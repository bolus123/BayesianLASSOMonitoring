"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 1000,
NULL, H1, NULL, 1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
bset <- list(
"method" = "MT",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 1000,
NULL, H1, NULL, 1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
source("~/Library/CloudStorage/Box-Box/2023 Summer/BayesianMonitoring/testcode.R")
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 1000,
1, NULL, H1, NULL, 1)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 1000,
0, NULL, H1, NULL, 1)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 3000,
1, NULL, H1, NULL, 1)
xx$Phi
hist(xx$Phi[1, ])
hist(xx$Phi[2, ])
bset <- list(
"method" = "regression",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 300, 10, 3000,
1, NULL, H1, NULL, 1)
hist(xx$Phi[2, ])
bset <- list(
"method" = "regression",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 500, 10, 5000,
1, NULL, H1, NULL, 1)
hist(xx$Phi[2, ])
bset <- list(
"method" = "LASSO",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 500, 10, 5000,
1, NULL, H1, NULL, 1)
xx
xx$Z
hist(xx$Phi[1, ])
hist(xx$Phi[2, ])
hist(xx$Phi[3, ])
hist(xx$Phi[4, ])
hist(xx$Phi[5, ])
hist(xx$Phi[1, ])
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1
)
xx <- GibbsRFLSMXcpp(Y1,
bset, 1e-6, 500, 10, 5000,
1, NULL, H1, NULL, 1)
hist(xx$Phi[1, ])
hist(xx$Phi[2, ])
hist(xx$Phi[3, ])
hist(xx$Phi[4, ])
xx$Z
xx$Z[1, ]
hist(xx$Z[1, ] )
hist(xx$Z[2, ] )
hist(xx$Z[3, ])
ph1pest <- rep(NA, length(Y1))
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
if (class(chart1)[1] != "try-error") {
tmpMu1 <- H1 %*% (xx$Gamma * xx$Tau)
tmpMu2 <- H2 %*% (xx$Gamma * xx$Tau)
tmpMu2 <- rbind(tmpMu1, tmpMu2)
for (ii in 1:10000) {
tmpsel <- sample(1:3000, 1)
tmpYyj <- yeojohnsontr(xx$Z[, tmpsel] + Y1, xx$theta[tmpsel], 1e-32)
Yph1[, ii] <- simYXph1(matrix(tmpYyj, ncol = 1), matrix(xx$Phi[, tmpsel], ncol = 1), matrix(tmpMu1[, tmpsel] + xx$mu0[tmpsel], ncol = 1),
xx$sigma2[tmpsel],  xx$theta[tmpsel],
1e-32, 1, 0, 1)
tmp <- simYXph2(length(Y2), matrix(tmpYyj, ncol = 1), matrix(xx$Phi[, tmpsel], ncol = 1), matrix(tmpMu2[, tmpsel] + xx$mu0[tmpsel], ncol = 1),
xx$sigma2[tmpsel],  xx$theta[tmpsel],
1e-32, 1, 0, 1)
Yph2[, ii] <- tmp[(length(tmp) - length(Y2) + 1):length(tmp)]
}
}
ph1pest <- rep(NA, length(Y1))
Yph1 <- matrix(NA, nrow = length(Y1), ncol = 10000)
Yph2 <- matrix(NA, nrow = length(Y2), ncol = 10000)
if (class(chart1)[1] != "try-error") {
tmpMu1 <- H1 %*% (xx$Gamma * xx$Tau)
tmpMu2 <- H2 %*% (xx$Gamma * xx$Tau)
tmpMu2 <- rbind(tmpMu1, tmpMu2)
for (ii in 1:10000) {
tmpsel <- sample(1:500, 1)
tmpYyj <- yeojohnsontr(xx$Z[, tmpsel] + Y1, xx$theta[tmpsel], 1e-32)
Yph1[, ii] <- simYXph1(matrix(tmpYyj, ncol = 1), matrix(xx$Phi[, tmpsel], ncol = 1), matrix(tmpMu1[, tmpsel] + xx$mu0[tmpsel], ncol = 1),
xx$sigma2[tmpsel],  xx$theta[tmpsel],
1e-32, 1, 0, 1)
tmp <- simYXph2(length(Y2), matrix(tmpYyj, ncol = 1), matrix(xx$Phi[, tmpsel], ncol = 1), matrix(tmpMu2[, tmpsel] + xx$mu0[tmpsel], ncol = 1),
xx$sigma2[tmpsel],  xx$theta[tmpsel],
1e-32, 1, 0, 1)
Yph2[, ii] <- tmp[(length(tmp) - length(Y2) + 1):length(tmp)]
}
}
Yph1
Yph1[1, ]
hist(Yph1[1, ])
hist(Yph1[2, ])
hist(Yph1[3, ])
hist(Yph1[1, ])
if ((class(chart1)[1] != "try-error")) {
for (ii in 1:(length(Y1))) {
ph1pest[ii] <- median(Yph1[ii, ], na.rm = TRUE)
}
}
if (class(chart1)[1] != "try-error") {
ph2pest <- rep(NA, length(Y2))
for (ii in 1:length(Y2)) {
ph2pest[ii] <- median(Yph2[ii, ], na.rm = TRUE)
}
}
ph1pest
X
pars
source("~/Library/CloudStorage/Box-Box/2023 Summer/BayesianMonitoring/testcode.R")
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
Rcpp::compileAttributes()
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
remove.packages("BayesianLASSOMonitoring")
roxygen2::roxygenise()
roxygen2::roxygenise()
Rcpp::compileAttributes()
devtools::install_github("bolus123/BayesianLASSOMonitoring", "trans-and-x")
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183, 365)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 9
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183, 365)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 9
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2 + w - 1, alpha, lambda, pi,
ceiling(TT1 * tt) + w - 1, delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(1, TT1 - q, 7)]
H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- list(
"method" = "ALASSO",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
qq$Phi
qq$nsim
qq$Y
qq$Z
hist(qq$Z[, 1])
hist(qq$Z[, 2])
hist(qq$Z[, 3])
hist(qq$Z[, 4])
hist(qq$Z[, 5])
hist(qq$Phi[1, ])
bset <- list(
"method" = "MT",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
bset <- list(
"method" = "MT",
"phimono" = 0,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
bset <- list(
"method" = "regression",
"phimono" = 1,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
bset <- list(
"method" = "regression",
"phimono" = 0,
"phiq" = 5,
"phiA" = diag(nrow = 5),
"phibound0" = Inf,
"phiboundqplus1" = 0,
"betaA" = diag(nrow = 1),
"gammaxi2" = 0.1,
"tautheta1" = 1,
"tautheta2" = 1,
"sigma2a" = 1,
"sigma2b" = 1,
"updatelambda2" = 1,
"lambda2alpha" = 1,
"lambda2beta" = 1,
"YJ" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"lowerbound" = 0,
"rounding" = 1,
"lambda2" = NULL,
"theta" = NULL
)
qq <- BayesianLASSOMonitoring::GibbsRFLSMX(matrix(Y1, ncol = 1), bset, H = H1,
tol = 1e-10, nsim = 300, thin = 10, burnin = 1000, verbose = 1)
source("~/Library/CloudStorage/Box-Box/2023 Summer/BayesianMonitoring/testcode.R")
source("~/Library/CloudStorage/Box-Box/2023 Summer/BayesianMonitoring/testcode.R")
