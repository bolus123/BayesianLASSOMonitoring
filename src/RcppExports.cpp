// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getV
arma::mat getV(arma::colvec Y, int q);
RcppExport SEXP _BayesianLassoMonitoring_getV(SEXP YSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getV(Y, q));
    return rcpp_result_gen;
END_RCPP
}
// rtwosegnorm
arma::colvec rtwosegnorm(int n, double a, double b, double mean, double sd);
RcppExport SEXP _BayesianLassoMonitoring_rtwosegnorm(SEXP nSEXP, SEXP aSEXP, SEXP bSEXP, SEXP meanSEXP, SEXP sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    rcpp_result_gen = Rcpp::wrap(rtwosegnorm(n, a, b, mean, sd));
    return rcpp_result_gen;
END_RCPP
}
// getGMat
arma::mat getGMat(int T, int q);
RcppExport SEXP _BayesianLassoMonitoring_getGMat(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getGMat(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getPhiMat
arma::mat getPhiMat(arma::colvec Phi, int T);
RcppExport SEXP _BayesianLassoMonitoring_getPhiMat(SEXP PhiSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(getPhiMat(Phi, T));
    return rcpp_result_gen;
END_RCPP
}
// getHMatCycle
arma::mat getHMatCycle(int T, int q, int wt);
RcppExport SEXP _BayesianLassoMonitoring_getHMatCycle(SEXP TSEXP, SEXP qSEXP, SEXP wtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type wt(wtSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatCycle(T, q, wt));
    return rcpp_result_gen;
END_RCPP
}
// getHMatMT
arma::mat getHMatMT(int T, int q);
RcppExport SEXP _BayesianLassoMonitoring_getHMatMT(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatMT(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatSustained
arma::mat getHMatSustained(int T, int q);
RcppExport SEXP _BayesianLassoMonitoring_getHMatSustained(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatSustained(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatIsolated
arma::mat getHMatIsolated(int T, int q);
RcppExport SEXP _BayesianLassoMonitoring_getHMatIsolated(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatIsolated(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatGradual
arma::mat getHMatGradual(int T, int q);
RcppExport SEXP _BayesianLassoMonitoring_getHMatGradual(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatGradual(T, q));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesianLassoMonitoring_getV", (DL_FUNC) &_BayesianLassoMonitoring_getV, 2},
    {"_BayesianLassoMonitoring_rtwosegnorm", (DL_FUNC) &_BayesianLassoMonitoring_rtwosegnorm, 5},
    {"_BayesianLassoMonitoring_getGMat", (DL_FUNC) &_BayesianLassoMonitoring_getGMat, 2},
    {"_BayesianLassoMonitoring_getPhiMat", (DL_FUNC) &_BayesianLassoMonitoring_getPhiMat, 2},
    {"_BayesianLassoMonitoring_getHMatCycle", (DL_FUNC) &_BayesianLassoMonitoring_getHMatCycle, 3},
    {"_BayesianLassoMonitoring_getHMatMT", (DL_FUNC) &_BayesianLassoMonitoring_getHMatMT, 2},
    {"_BayesianLassoMonitoring_getHMatSustained", (DL_FUNC) &_BayesianLassoMonitoring_getHMatSustained, 2},
    {"_BayesianLassoMonitoring_getHMatIsolated", (DL_FUNC) &_BayesianLassoMonitoring_getHMatIsolated, 2},
    {"_BayesianLassoMonitoring_getHMatGradual", (DL_FUNC) &_BayesianLassoMonitoring_getHMatGradual, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesianLassoMonitoring(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
