library(glmnet)
library(BayesianLassoMonitoring)

q <- 5
lambda2 <- 5
T <- 100
seed <- 12345

#######################################
set.seed(seed)

# get a simulated process
Y <- arima.sim(list(ar = 0.5), n = T)

# get lagged variables
V <- getV(Y, q)

# get shifts
IS <- IsolatedShift(T)
SS <- SustainedShift(T)

X <- cbind(IS, SS)

#######################################
# initialize the MCMC process using the LASSO model
initM0 <- glmnet(cbind(V, X), Y, lambda = sqrt(lambda2))

# intercept
beta0 <- as.numeric(initM0$a0)

# coefficients for the lagged variables
beta1 <- as.numeric(initM0$beta[1:q])

# coefficients for the shifts
beta2 <- as.numeric(initM0$beta[(q + 1):(q + T + T - 2)])

#######################################
# get the bayesian model with partial monotonicity constrains and shifts using MCMC
M1 <- getPosterior(Y, V, X, lambda2, beta0, beta1, beta2, burnin = 100, nsim = 1000)
beta2 <- M1$beta[, (q + 1 + 1):(q + 1 + T + T - 2)]

#######################################
# test the effect of shifts using the Benjamini-Hochberg Procedure.  
# Note that it controls FDR rather than FAP (or FWER).
BH <- BenjaminiHochberg(FDR = 0.2, beta2 = beta2, side = "two-sided")
# the first column represents for p-values.
# the second column represents for the ranks of p-values.
# the third column represents for the significant levels of the corresponding p-values calculated using the BH procedure.
# the forth column shows whether the p-values are significant.